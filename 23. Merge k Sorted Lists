You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.




# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        minheap = []
        dummy = ListNode()
        curr = dummy

        for i, lst in enumerate(lists):
            if lst:
                heappush(minheap, (lst.val,i,lst))
        
        while minheap:
            val, i, node = heappop(minheap)
            curr.next = ListNode(val)
            curr = curr.next
        
            if node.next:
                heappush(minheap, (node.next.val, i, node.next))
        return dummy.next

