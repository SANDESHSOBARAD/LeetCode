Given a positive integer n, find the pivot integer x such that:

The sum of all elements between 1 and x inclusively equals the sum of all elements between x and n inclusively.
Return the pivot integer x. If no such integer exists, return -1. It is guaranteed that there will be at most one pivot index for the given input.

class Solution:
    def pivotInteger(self, n: int) -> int:
        
        total = n *(n+1)//2
        leftSum = 0
        for i in range(1, n+1):
            leftSum += i

            rightSum = total - leftSum + i

            if leftSum == rightSum:
                return i
        return -1
        
        


