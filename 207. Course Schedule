There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.

For example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.
Return true if you can finish all courses. Otherwise, return false.


class Solution:
    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:
        

        def hasCycle(course, adjList, visited):
            if visited[course] == 1:
                return True
            if visited[course] == 2:
                return False
                
            visited[course] = 1

            for prereq in adjList[course]:
                if hasCycle(prereq, adjList, visited):
                    return True
            
            visited[course] = 2
             
            return False


        adjList = [[] for _ in range(numCourses)]

        for course, prereq in prerequisites:
            adjList[course].append(prereq)

        visited = [0] * numCourses

        for course in range(numCourses):
            if visited[course] == 0:
                if hasCycle(course, adjList, visited):
                    return False
        
        return True
