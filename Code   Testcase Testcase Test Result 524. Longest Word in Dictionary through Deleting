Given a string s and a string array dictionary, return the longest string in the dictionary that can be formed by deleting some of the given string characters. If there is more than one possible result, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.

 

Example 1:

Input: s = "abpcplea", dictionary = ["ale","apple","monkey","plea"]
Output: "apple"
Example 2:

Input: s = "abpcplea", dictionary = ["a","b","c"]
Output: "a"

class Solution:
    def findLongestWord(self, s: str, dictionary: List[str]) -> str:
        def is_subsequence(s, word):
        # Check if 'word' is a subsequence of 's'
            it = iter(s)
            return all(char in it for char in word)

        # Sort the dictionary first by length (descending) and then by lexicographical order (ascending)
        dictionary.sort(key=lambda x: (-len(x), x))

        for word in dictionary:
            if is_subsequence(s, word):
                return word

        return ""
