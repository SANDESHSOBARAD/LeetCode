Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.

A k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:

0 <= i, j < nums.length
i != j
|nums[i] - nums[j]| == k
Notice that |val| denotes the absolute value of val.

class Solution:
    def findPairs(self, nums: List[int], k: int) -> int:
        if k < 0:
            return 0

        hmap = defaultdict(int)

        for num in nums:
            hmap[num] += 1
        count = 0
        for num in hmap:
            if k > 0 and num + k in hmap:
                count += 1
            elif k == 0 and hmap[num] > 1:
                count += 1
        
        return count
