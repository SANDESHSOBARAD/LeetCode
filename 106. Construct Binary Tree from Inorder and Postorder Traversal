Given two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, inorder: List[int], postorder: List[int]) -> Optional[TreeNode]:
        def util(inorder,postorder,n):
            if not inorder or not postorder:
                return None
            root = TreeNode(postorder[-1])
            mid = inorder.index(postorder[-1])
            root.left = util(inorder[:mid],postorder[:mid],mid)
            root.right = util(inorder[mid+1:],postorder[mid:n-1],n-mid-1)
            return root
        return util(inorder,postorder,len(postorder))
