Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).



# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if not root: return []

        result = []
        queue = deque([root])

        while queue:
            level = len(queue)
            curr = []
            for _ in range(level):
                node = queue.popleft()
                curr.append(node.val)

                if node.left: queue.append(node.left)
                if node.right: queue.append(node.right)
            result.append(curr)
        return result
