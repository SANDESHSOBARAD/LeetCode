Given a string s, return the last substring of s in lexicographical order.

Example 1:

Input: s = "abab"
Output: "bab"
Explanation: The substrings are ["a", "ab", "aba", "abab", "b", "ba", "bab"]. The lexicographically maximum substring is "bab".
Example 2:

Input: s = "leetcode"
Output: "tcode"

class Solution:
    def lastSubstring(self, s: str) -> str:
        n = len(s)
        i, j, k = 0, 1, 0  # i is the start of the current best, j is the challenger, k compares chars
        while j + k < n:
            if s[i + k] == s[j + k]:
                k += 1  # Compare the next character
            elif s[i + k] < s[j + k]:
                i = max(i + k + 1, j)  # Move i to the better candidate
                j = i + 1  # Reset challenger
                k = 0
            else:
                j = j + k + 1  # Move j to the next potential start
                k = 0
        return s[i:]
