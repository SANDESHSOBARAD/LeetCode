Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        prefix, postfix = [1]*len(nums),[1]*len(nums)

        for i in range(1, len(nums)):
            prefix[i] = prefix[i-1] * nums[i-1]
        
        for i in reversed(range(0, len(nums)-1)):
            postfix[i] = postfix[i+1] * nums[i+1]
        
        for i in range(len(nums)):
            nums[i] = prefix[i] * postfix[i]
        return nums
